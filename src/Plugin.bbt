REM >!RunImage
REM
REM This file is part of WinKeys:
REM
REM   http://www.stevefryatt.org.uk/software/
REM
REM Licensed under the EUPL, Version 1.1 only (the "Licence");
REM You may not use this work except in compliance with the
REM Licence.
REM
REM You may obtain a copy of the Licence at:
REM
REM   http://joinup.ec.europa.eu/software/page/eupl
REM
REM Unless required by applicable law or agreed to in
REM writing, software distributed under the Licence is
REM distributed on an "AS IS" basis, WITHOUT WARRANTIES
REM OR CONDITIONS OF ANY KIND, either express or implied.
REM
REM See the Licence for the specific language governing
REM permissions and limitations under the Licence.

REM Windows Keys Setup
REM (C) Stephen Fryatt, 2001
REM
REM Version 0.21
REM 15 December 2002
:
LIBRARY "BASIC:WimpLib"
:
ON ERROR VDU 4 : PRINT REPORT$;" at line ";ERL : END
:
PROCinitialise
:
ON ERROR quit%=(FNerror(task_name$)=2)
:
WHILE NOT quit%
 PROCpoll
ENDWHILE
:
PROCterminate
:
END
:
:
:
:
REM
:
:
:
:
DEF PROCpoll
SYS "Wimp_Poll",&3831,b% TO reason%

CASE reason% OF
 WHEN 2     : SYS "Wimp_OpenWindow",,b%
 WHEN 3     : SYS "Wimp_CloseWindow",,b%
 WHEN 6     : PROCmouse_click
 WHEN 8     : PROCkey_press
 WHEN 17,18 : PROCwimp_message
ENDCASE
ENDPROC
:
:
:
:
REM
:
:
:
:
DEF PROCmouse_click
IF b%!12 = settings_window% THEN
 CASE b%!16 OF
  WHEN 0 : PROCwrite_configuration
           IF b%!8=4 THEN quit%=TRUE
  WHEN 1 : IF b%!8=4 THEN quit%=TRUE ELSE PROCfill_window : PROCredraw_window
  WHEN 2 : IF b%!8=4 THEN PROCclear_window : PROCredraw_window
 ENDCASE
ENDIF
ENDPROC
:
:
:
:
REM
:
:
:
:
DEF PROCkey_press
CASE b%!24 OF
 WHEN 13   : PROCwrite_configuration : quit%=TRUE
 WHEN 27   : quit%=TRUE
 OTHERWISE : SYS "Wimp_ProcessKey",b%!24
ENDCASE
ENDPROC
:
:
:
:
REM
:
:
:
:
DEF PROCwimp_message
CASE b%!16 OF
 WHEN 0      : quit%=TRUE
 WHEN 3      : PROCmessage_dataload(b%!24,FNzero_string(b%+44),b%!40)
 WHEN &502   : PROCsend_interactive_help
 WHEN &50D83 : PROCopen_window(settings_window%)
ENDCASE
ENDPROC
:
:
:
:
REM
:
:
:
:
DEF PROCinitialise
:
LOCAL wimp_version%,wimp_required%
:
DIM N% 16
:
SYS "MessageTrans_FileInfo",,"<WinKeys$Dir>.Messages" TO v%,,e%
:
DIM f% e%
:
SYS "MessageTrans_OpenFile",N%,"<WinKeys$Dir>.Messages",f%
:
DIM b% &4000, q% 255, a% 255
:
$b%="TASK"
:
TASK=!b%
:
task_name$=FNmessage_lookup("_TaskName")
:
wimp_required%=310
:
!q%=&50D83
q%!4=&502
q%!8=3
q%!&C=0
:
SYS "Wimp_Initialise",wimp_required%,TASK,task_name$,q% TO wimp_version%,task_handle%
:
quit%=FALSE
:
indirection_size%=&BB8
DIM indirection_data% indirection_size%
:
PROCload_template("<WinKeys$Dir>.Templates")
PROCload_template("Setup",b%,indirection_data%,indirection_size%,-1)
SYS "Wimp_CreateWindow",,b% TO settings_window%
PROCclose_templates
:
DIM key_name$(7), key_icon%(7)
:
key_name$()="Win","ShiftWin","CtrlWin","ShiftCtrlWin","Menu","ShiftMenu","CtrlMenu","ShiftCtrlMenu"
key_icon%()=5,7,9,11,14,16,18,20
:
PROCfill_window
:
SYS "OS_GetEnv" TO S$
T%=INSTR(S$,"-openat")
IF T%>0 THEN
 W%=INSTR(S$," ",T%)
 U%=INSTR(S$," ",W%+1)
 x%=VAL(MID$(S$,W%+1,INSTR(S$," ",W%+1)-W%))
 w%=VAL(MID$(S$,U%+1,INSTR(S$," ",U%+1)-U%))
 PROCopen_window_at(settings_window%,x%,w%)
ELSE
 PROCopen_window(settings_window%)
ENDIF
PROCput_caret_at_end(settings_window%,key_icon%(0))
ENDPROC
:
:
:
:
REM
:
:
:
:
DEF PROCterminate
:
SYS "Wimp_CloseDown",task_handle%,TASK
ENDPROC
:
:
:
:
REM
:
:
:
:
DEF PROCfill_window
:
LOCAL loop%
:
FOR loop%=0 TO 7
 SYS "XOS_ReadVarVal","WinKeys$"+key_name$(loop%),b%,&FA0,0,0 TO ,,length%
 b%?length%=13
 $FNicon_indirection(settings_window%,key_icon%(loop%))=$b%
NEXT loop%
ENDPROC
:
:
:
:
REM
:
:
:
:
DEF PROCwrite_configuration
:
LOCAL loop%,C$,L%,F$,C%,_%
:
F$="<Choices$Write>.WinKeys"
SYS "OS_File",17,F$ TO _%
IF _%=0 THEN SYS "OS_File",8,F$,,,0
F$+=".SetKeys"
C%=OPENOUT(F$)
IF C%<>0 THEN
 BPUT#C%,"| WinKeys Setup File"
 BPUT#C%,"|"
 BPUT#C%,"| This file was autogenerated by WinKey Setup."
 BPUT#C%,""
ENDIF
:
FOR loop%=0 TO 7
 C$=$FNicon_indirection(settings_window%,key_icon%(loop%))
 IF C$="" THEN
  L%=-1
 ELSE
  L%=LEN(C$)
  IF C%<>0 THEN BPUT#C%,"Set "+"WinKeys$"+key_name$(loop%)+" "+C$
 ENDIF
 SYS "XOS_SetVarVal","WinKeys$"+key_name$(loop%),C$,L%,0,0
NEXT loop%
:
IF C%<>0 THEN
 CLOSE#C%
 SYS "OS_File",18,F$,&FEB
ENDIF
ENDPROC
:
:
:
:
REM
:
:
:
:
DEF PROCclear_window
:
LOCAL loop%
:
FOR loop%=0 TO 7
 $FNicon_indirection(settings_window%,key_icon%(loop%))=""
NEXT loop%
ENDPROC
:
:
:
:
REM
:
:
:
:
DEF PROCredraw_window
:
LOCAL loop%
:
FOR loop%=0 TO 7
 PROCforce_icon_redraw(settings_window%,key_icon%(loop%))
NEXT loop%
:
SYS "Wimp_GetCaretPosition",,q%
IF !q%=settings_window% THEN PROCput_caret_at_end(settings_window%,q%!4)
ENDPROC
:
:
:
:
REM
:
:
:
:
DEF PROCmessage_dataload(icon%,filename$,filetype%)
:
LOCAL loop%,found%,position%
:
found%=FALSE
FOR loop%=0 TO 7
 IF key_icon%(loop%)=icon% THEN found%=TRUE
NEXT loop%
:
IF found% THEN
 position%=-1
 :
 CASE filetype% OF
  WHEN &1000 : filename$="Filer_OpenDir "+filename$
  WHEN &2000 : filename$="StartDesktopTask "+filename$
  OTHERWISE
   SYS "Wimp_GetCaretPosition",,q%
   IF !q%=settings_window% AND q%!4=icon% THEN
    position%=q%!20+LEN(filename$)
    filename$=LEFT$($FNicon_indirection(settings_window%,icon%),q%!20)+filename$+MID$($FNicon_indirection(settings_window%,icon%),q%!20+1)
   ELSE
    filename$=$FNicon_indirection(settings_window%,icon%)+filename$
   ENDIF
 ENDCASE
 :
 $FNicon_indirection(settings_window%,icon%)=LEFT$(filename$,&FE)
 PROCforce_icon_redraw(settings_window%,icon%)
 IF FNis_caret_in_icon(settings_window%,icon%) THEN
  IF position%=-1 THEN position%=LEN($FNicon_indirection(settings_window%,icon%))
  SYS "Wimp_SetCaretPosition",settings_window%,icon%,,,-1,position%
 ENDIF
ENDIF
ENDPROC
:
:
:
:
REM
:
:
:
:
DEF PROCsend_interactive_help
:
LOCAL A$,Z$,length%
:
A$=""
Z$=""
:
IF b%!32=settings_window% THEN
 CASE b%!36 OF
  WHEN 0,1,2 : A$="Help0"+STR$(b%!36)
  WHEN 5     : A$="HelpKey" : Z$="KeyW"
  WHEN 7     : A$="HelpKey" : Z$="KeySW"
  WHEN 9     : A$="HelpKey" : Z$="KeyCW"
  WHEN 11    : A$="HelpKey" : Z$="KeySCW"
  WHEN 14    : A$="HelpKey" : Z$="KeyM"
  WHEN 16    : A$="HelpKey" : Z$="KeySM"
  WHEN 18    : A$="HelpKey" : Z$="KeyCM"
  WHEN 20    : A$="HelpKey" : Z$="KeySCM"
 ENDCASE
ENDIF
:
IF A$<>"" THEN
 IF Z$<>"" THEN SYS "MessageTrans_Lookup",N%,Z$,q%,&FF ELSE $q%=""
 SYS "MessageTrans_Lookup",N%,A$,b%+20,&EB,q% TO,,,length%
 b%!&C=b%!8
 b%!16=&503
 !b%=24+(length%AND&FFFFFC)
 SYS "Wimp_SendMessage",17,b%,b%!4
ENDIF
ENDPROC
:
:
:
:
REM
:
:
:
:
DEF FNmessage_lookup(token$)
:
LOCAL message$
:
IF token$<>"" THEN SYS "MessageTrans_Lookup",N%,token$ TO ,,message$
=message$

